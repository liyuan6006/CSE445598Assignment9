//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project5GroupSln.WordService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WordService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntPlusPlus", ReplyAction="http://tempuri.org/IService1/IntPlusPlusResponse")]
        string IntPlusPlus(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IntPlusPlus", ReplyAction="http://tempuri.org/IService1/IntPlusPlusResponse")]
        System.Threading.Tasks.Task<string> IntPlusPlusAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        string[] Top10Words(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10ContentWords", ReplyAction="http://tempuri.org/IService1/Top10ContentWordsResponse")]
        string[] Top10ContentWords(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10ContentWords", ReplyAction="http://tempuri.org/IService1/Top10ContentWordsResponse")]
        System.Threading.Tasks.Task<string[]> Top10ContentWordsAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUrlAnalysis", ReplyAction="http://tempuri.org/IService1/getUrlAnalysisResponse")]
        string getUrlAnalysis(string[] urls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUrlAnalysis", ReplyAction="http://tempuri.org/IService1/getUrlAnalysisResponse")]
        System.Threading.Tasks.Task<string> getUrlAnalysisAsync(string[] urls);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Project5GroupSln.WordService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Project5GroupSln.WordService.IService1>, Project5GroupSln.WordService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string IntPlusPlus(int value) {
            return base.Channel.IntPlusPlus(value);
        }
        
        public System.Threading.Tasks.Task<string> IntPlusPlusAsync(int value) {
            return base.Channel.IntPlusPlusAsync(value);
        }
        
        public string[] Top10Words(string url) {
            return base.Channel.Top10Words(url);
        }
        
        public System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url) {
            return base.Channel.Top10WordsAsync(url);
        }
        
        public string[] Top10ContentWords(string url) {
            return base.Channel.Top10ContentWords(url);
        }
        
        public System.Threading.Tasks.Task<string[]> Top10ContentWordsAsync(string url) {
            return base.Channel.Top10ContentWordsAsync(url);
        }
        
        public string getUrlAnalysis(string[] urls) {
            return base.Channel.getUrlAnalysis(urls);
        }
        
        public System.Threading.Tasks.Task<string> getUrlAnalysisAsync(string[] urls) {
            return base.Channel.getUrlAnalysisAsync(urls);
        }
    }
}
